name: CI for stripe-samples/subscription-use-cases
on:
  push:
    branches:
      - master
      - dependency-conflict-ci

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          repository: 'stripe-samples/sample-ci'
          path: 'sample-ci'

      - name: Setup dependencies
        run: |
          source sample-ci/helpers.sh

          setup_dependencies

      - name: Run tests
        run: |
          rm -rf usage-based-subscriptions/server/dotnet/ReportUsage # causes "Program.cs(14,28): error CS0017: Program has more than one entry point defined."

          source sample-ci/helpers.sh

          install_docker_compose_settings
          export STRIPE_WEBHOOK_SECRET=$(retrieve_webhook_secret)
          cat <<EOF >> .env
          BASIC=${BASIC}
          PREMIUM=${PREMIUM}
          EOF

          sample=fixed-price-subscriptions
          for lang in $(cat .cli.json | server_langs_for_integration $sample)
          do
            configure_docker_compose_for_integration "$sample" "$lang" ../../client/vanillajs
            docker-compose up -d && wait_web_server
            docker-compose exec -T runner bundle exec rspec spec/fixed_price_server_spec.rb
          done


          sample=per-seat-subscriptions
          for lang in $(cat .cli.json | server_langs_for_integration $sample)
          do
            configure_docker_compose_for_integration "$sample" "$lang" ../../client
            docker-compose up -d && wait_web_server
            docker-compose exec -T runner bundle exec rspec spec/per_seat_server_spec.rb
          done

          sample=usage-based-subscriptions
          for lang in $(cat .cli.json | server_langs_for_integration $sample)
          do
            configure_docker_compose_for_integration "$sample" "$lang" ../../client
            docker-compose up -d && wait_web_server
            docker-compose exec -T runner bundle exec rspec spec/usage_based_server_spec.rb
          done
        env:
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.TEST_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.TEST_STRIPE_SECRET_KEY }}
          PREMIUM: ${{ secrets.TEST_PREMIUM_PRICE }}
          BASIC: ${{ secrets.TEST_BASIC_PRICE }}


      - name: Collect debug information
        if: ${{ failure() }}
        run: |
          cat docker-compose.yml
          docker-compose ps -a
          docker-compose logs web
