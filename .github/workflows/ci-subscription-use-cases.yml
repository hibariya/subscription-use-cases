name: CI for stripe-samples/subscription-use-cases
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # repository: 'stripe-samples/subscription-use-cases'
          repository: 'hibariya/subscription-use-cases'
          ref: 'ci'

      - uses: actions/checkout@v2
        with:
          repository: 'stripe-samples/sample-ci'
          path: 'sample-ci'
          ref: 'ci'

      - name: Install gettext for envsubst
        run: |
          sudo apt install gettext-base

      - name: Install jq
        run: |
          sudo curl -o /usr/bin/jq -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
          sudo chmod +x /usr/bin/jq

      - name: Run tests
        run: |
          source sample-ci/helpers.sh

          install_docker_compose_settings
          export STRIPE_WEBHOOK_SECRET=$(retrieve_webhook_secret)
          cat <<EOF >> .env
          BASIC=${BASIC}
          PREMIUM=${PREMIUM}
          EOF

          sample=fixed-price-subscriptions
          for lang in $(cat .cli.json | server_langs_for_integration $sample)
          do
            configure_docker_compose_for_integration "$sample" "$lang" ../../client/vanillajs \
                                                     target/subscriptions-with-fixed-price-1.0.0-SNAPSHOT-jar-with-dependencies.jar

            docker-compose up -d && wait_web_server
            docker-compose exec -T runner bundle exec rspec spec/fixed_price_server_spec.rb
          done


          sample=per-seat-subscriptions
          for lang in $(cat .cli.json | server_langs_for_integration $sample)
          do
            configure_docker_compose_for_integration "$sample" "$lang" ../../client \
                                                     target/subscriptions-with-per-seat-pricing-1.0.0-SNAPSHOT-jar-with-dependencies.jar

            docker-compose up -d && wait_web_server
            docker-compose exec -T runner bundle exec rspec spec/per_seat_server_spec.rb
          done

          sample=usage-based-subscriptions
          rm -rf ${sample}/server/dotnet/ReportUsage # causes "Program.cs(14,28): error CS0017: Program has more than one entry point defined."
          for lang in $(cat .cli.json | server_langs_for_integration $sample)
          do
            configure_docker_compose_for_integration "$sample" "$lang" ../../client \
                                                     target/subscriptions-with-metered-usage-1.0.0-SNAPSHOT-jar-with-dependencies.jar

            docker-compose up -d && wait_web_server
            docker-compose exec -T runner bundle exec rspec spec/usage_based_server_spec.rb
          done
        env:
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.TEST_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.TEST_STRIPE_SECRET_KEY }}
          PREMIUM: price_1HXyXwCWW2eVYDoPnnTQ02VO
          BASIC: price_1HXyVBCWW2eVYDoPtXcEdXfw

      - name: Collect debug information
        if: ${{ failure() }}
        run: |
          cat docker-compose.yml
          docker-compose ps -a
          docker-compose logs
        env:
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.TEST_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.TEST_STRIPE_SECRET_KEY }}
          PREMIUM: price_1HXyXwCWW2eVYDoPnnTQ02VO
          BASIC: price_1HXyVBCWW2eVYDoPtXcEdXfw

